//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "DBMain.h"
#include <System.SysUtils.hpp>
#include "LocateQueueProc.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TfrmDBMain *frmDBMain;
const String DeviceID="DeviceID";
const String DeviceSN="DeviceSN";
//---------------------------------------------------------------------------
String GetMachineName()
{
	Char ComputerName[255];
	unsigned long MaxLength = 255;
	bool RetVal;
	RetVal = GetComputerName(ComputerName, &MaxLength);
	if (RetVal == 0)
		return "";
	return String(ComputerName);
}
__fastcall TfrmDBMain::TfrmDBMain(TComponent* Owner)
	: TForm(Owner)
{

 IsLocate=false;
 jpgImage= new TJPEGImage();
 pngImage=new TPngImage();
 AppPath = ExtractFilePath(ParamStr(0));
 FSTAppProfile->Text="采集终端("+GetMachineName()+")";
}
//---------------------------------------------------------------------------
void __fastcall TfrmDBMain::FSTManagerRequestManagerPassword(const TObject *Sender,
          const UnicodeString RemoteIdentifier, UnicodeString &Password)

{
  Password="1314";
}
//---------------------------------------------------------------------------

void __fastcall TfrmDBMain::acUpdatePhotoExecute(TObject *Sender)
{
  TGUID photoID;
  String photoFileName;
  CreateGUID(photoID);
  String sphotoID=System::Sysutils::GUIDToString(photoID);
  sphotoID=sphotoID.SubString0(1,sphotoID.Length()-2);
  photoFileName=System::Ioutils::TPath::Combine(AppPath, sphotoID)+".jpg";
  jpgImage->Assign(Image1->Picture->Bitmap);
  jpgImage->SaveToFile(photoFileName);
  ADOTable1->Edit();
  ADOTable1->FieldValues["Photo"]=sphotoID;
  ADOTable1->Post();

}
//---------------------------------------------------------------------------
void __fastcall TfrmDBMain::FSTAppProfileResourceReceived(const TObject *Sender, const TRemoteResource *AResource)

{
	if(AResource->ResType==TRemoteResourceType::Stream)
	{
		if(AResource->Hint=="Image")
		{
			unsigned char FileFormat[1];
			TStream *imageStream=AResource->Value.AsStream;
			imageStream->Position=0;
			imageStream->Position=1;
			imageStream->Read(FileFormat,1);
			imageStream->Position=0;
			switch(FileFormat[0])
			{
			   case 0x50:    //png
			   pngImage->LoadFromStream(imageStream);
			   Image1->Picture->Bitmap->Assign(pngImage);
			   break;
			   case 0x4A:   //jpg
			   jpgImage->LoadFromStream(imageStream);
			   Image1->Picture->Bitmap->Assign(jpgImage);
				break;
			   default:
			   Image1->Picture->Bitmap->LoadFromStream(imageStream);
			}
			if(ADOTable1->Active)
			  acUpdatePhotoExecute(NULL);
		}
	}
	else
	{
	  if((CompareText(AResource->Hint,DeviceID)==0)||(CompareText(AResource->Hint,DeviceSN)==0))
	  {
	   //	LocateRecord(AResource->Hint,AResource->Value.AsString);
		   TLocateRecord ALocateRecord=&LocateRecord;
		   TThreadProcedure* methProc(static_cast<TThreadProcedure*>(new TLocateQueueProc(ALocateRecord,AResource->Hint,AResource->Value.AsString)));
		   TThread::Queue(0, methProc);
	  }

	}
}
//---------------------------------------------------------------------------
void __fastcall TfrmDBMain::LocateRecord(String Key,String Value)
{
  if(!ADOTable1->Active)
  {
	 FSTAppProfile->Resources->FindByName("IsLocate")->Value=TResourceValue::_op_Implicit(bool(IsLocate));
 	 FSTAppProfile->Resources->FindByName("DeviceName")->Value=TResourceValue::_op_Implicit(String(L"数据库未打开！"));
	return;
  }
   TLocateOptions LOptions;
   LOptions.Clear();
   LOptions<<loCaseInsensitive;
   if(CompareText(Key,DeviceID)==0)
   IsLocate=ADOTable1->Locate("ID",Value,LOptions);
   else if(CompareText(Key,DeviceSN)==0)
	IsLocate= ADOTable1->Locate("SN",Value,LOptions);
   FSTAppProfile->Resources->FindByName("IsLocate")->Value=TResourceValue::_op_Implicit(bool(IsLocate));
   if(IsLocate)
   {
   	 FSTAppProfile->Resources->FindByName("DeviceID")->Value=TResourceValue::_op_Implicit(String(ADOTable1->FieldByName("ID")->AsString));
	 FSTAppProfile->Resources->FindByName("DeviceName")->Value=TResourceValue::_op_Implicit(String(ADOTable1->FieldByName("Name")->AsString));
	 FSTAppProfile->Resources->FindByName("DeviceModel")->Value=TResourceValue::_op_Implicit(String(ADOTable1->FieldByName("Model")->AsString));
	 String imgFileName=ADOTable1->FieldByName("Photo")->AsString;
	 imgFileName=System::Ioutils::TPath::Combine(AppPath, imgFileName)+".jpg";
	 if(FileExists(imgFileName))
	 {
		 TMemoryStream *imgStream=new TMemoryStream(); //不能删除
		 imgStream->LoadFromFile(imgFileName);
		 imgStream->Position=0;
		 FSTAppProfile->Resources->FindByName("Image")->Value=TResourceValue::_op_Implicit(imgStream);
	 }
   }
   else
   {
	 FSTAppProfile->Resources->FindByName("DeviceName")->Value=TResourceValue::_op_Implicit(String(L"设备编码不存在！"));
   }
}
void __fastcall TfrmDBMain::acConnDBUpdate(TObject *Sender)
{
 acRefresh->Enabled=ADOConnection1->Connected;
}
//---------------------------------------------------------------------------

void __fastcall TfrmDBMain::acConnDBExecute(TObject *Sender)
{
 // String ConfigFileName=System::Ioutils::TPath::Combine(AppPath, "conn.txt");
  ADOConnection1->Close();
  ADOConnection1->ConnectionString=edAccDbStr->Text;
  ADOConnection1->Open();
  if(ADOConnection1->Connected)
	acRefresh->Execute();
}
//---------------------------------------------------------------------------

void __fastcall TfrmDBMain::BindLink1AssignedValue(TObject *Sender, TBindingAssignValueRec &AssignValueRec,
          const TValue &Value)
{
  String sphotoID=ADOTable1->FieldByName("Photo")->AsString;
  String photoFileName=System::Ioutils::TPath::Combine(AppPath, sphotoID)+".jpg";
  lbPhotoFile->Caption=photoFileName;
  if(FileExists(photoFileName))
  {
	jpgImage->LoadFromFile(photoFileName);
	Image1->Picture->Bitmap->Assign(jpgImage);
  }
  else
	Image1->Picture->Assign(NULL);
}
//---------------------------------------------------------------------------

void __fastcall TfrmDBMain::acRefreshExecute(TObject *Sender)
{
	BindLink1->Active=false;
	ADOTable1->Close();
	ADOTable1->Open();
	BindLink1->Active=true;
}
//---------------------------------------------------------------------------

void __fastcall TfrmDBMain::btSetupClick(TObject *Sender)
{
  edAccDbStr->Text=PromptDataSource((unsigned int)Handle,edAccDbStr->Text);
}
//---------------------------------------------------------------------------
void __fastcall TfrmDBMain::FormDestroy(TObject *Sender)
{
 delete jpgImage;
 delete pngImage;
}
//---------------------------------------------------------------------------


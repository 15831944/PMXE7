//---------------------------------------------------------------------------

#include <fmx.h>
#pragma hdrstop

#include "ShowHSView.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "CommBase"
#pragma resource "*.fmx"
TShowViewForm *ShowViewForm;
//---------------------------------------------------------------------------
__fastcall TShowViewForm::TShowViewForm(TComponent* Owner,TClientBroker * ABroker)
	: TCommBaseForm(Owner,ABroker)
{

}
//---------------------------------------------------------------------------
void __fastcall TShowViewForm::SetMType(int Value)
{
  if(imType!=Value)
  {
	   imType=Value;
	   if(imType==1)//ͼƬ
	   {
		 Memo1->Visible=false;
		 Image1->Visible=true;
	   }
	   else//Txt
	   {
		Image1->Visible=false;
		Memo1->Visible=true;
		Memo1->Align=TAlignLayout::Center;
	   }
   }
}
void __fastcall TShowViewForm::SetModuleText(String Value)
{
	lbModule->Text=Value;
}
void __fastcall TShowViewForm::SetMFileName(String Value)
{
   if(FMFileName!=Value)
   {
	FMFileName= Value;
	if(imType==1)
	 Image1->Bitmap->LoadFromFile(FMFileName);
	else
	 Memo1->Lines->LoadFromFile(FMFileName);
   }
}
void __fastcall TShowViewForm::ShowShareSheetAction1BeforeExecute(TObject *Sender)

{
 if(imType==1)
 {
   ShowShareSheetAction1->Bitmap->Assign(Image1->Bitmap);
   ShowShareSheetAction1->TextMessage=FModuleText;
 }
 else
 {
	 ShowShareSheetAction1->TextMessage=FModuleText+";"+Memo1->Text;
 }
}
//---------------------------------------------------------------------------
void __fastcall TShowViewForm::FormGesture(TObject *Sender, const TGestureEventInfo &EventInfo,
          bool &Handled)
{
  	if (EventInfo.GestureID == static_cast<short>(igiZoom)) {
		IControl *LObj = this->ObjectAtPoint(ClientToScreen(EventInfo.Location));
		if (static_cast<TImage*>((TImage*)LObj)) {
			if (!EventInfo.Flags.Contains(TInteractiveGestureFlag::gfBegin) &&
				!EventInfo.Flags.Contains(TInteractiveGestureFlag::gfEnd)) {
				// zoom the image
				TImage * LImage = dynamic_cast<TImage*>(LObj->GetObject());
				TPointF LImageCenter = LImage->Position->Point + PointF(LImage->Width / 2,
					LImage->Height / 2);
				LImage->Width = LImage->Width + (EventInfo.Distance - FLastDistance);
				LImage->Height = LImage->Height + (EventInfo.Distance - FLastDistance);
				LImage->Position->X = LImageCenter.X - LImage->Width / 2;
				LImage->Position->Y = LImageCenter.Y - LImage->Height / 2;
			}
			FLastDistance = EventInfo.Distance;
		}
	}
}
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

#ifndef mainH
#define mainH
//---------------------------------------------------------------------------
#include <System.Classes.hpp>
#include <FMX.Controls.hpp>
#include <FMX.Forms.hpp>
#include <FMX.StdCtrls.hpp>
#include <FMX.Types.hpp>
#include <FMX.Edit.hpp>
#include <FMX.ActnList.hpp>
#include <FMX.MediaLibrary.Actions.hpp>
#include <FMX.Objects.hpp>
#include <FMX.StdActns.hpp>
#include <System.Actions.hpp>
#include <FMX.Media.hpp>
#include <zxing/common/Counted.h>
#include <zxing/Binarizer.h>
#include <zxing/MultiFormatReader.h>
#include <zxing/Result.h>
#include <zxing/ReaderException.h>
#include <zxing/common/GlobalHistogramBinarizer.h>
#include <zxing/common/HybridBinarizer.h>
#include <exception>
#include <zxing/Exception.h>
#include <zxing/common/IllegalArgumentException.h>
#include <zxing/BinaryBitmap.h>
#include <zxing/DecodeHints.h>

#include <zxing/qrcode/QRCodeReader.h>
#include <zxing/multi/qrcode/QRCodeMultiReader.h>
#include <zxing/multi/ByQuadrantReader.h>
#include <zxing/multi/MultipleBarcodeReader.h>
#include <zxing/multi/GenericMultipleBarcodeReader.h>
using namespace std;
using namespace zxing;
using namespace zxing::multi;
using namespace zxing::qrcode;
//---------------------------------------------------------------------------
class TfrmMain : public TForm
{
__published:	// IDE-managed Components
	TToolBar *Header;
	TToolBar *Footer;
	TLabel *HeaderLabel;
	TLabel *Label2;
	TLabel *Label3;
	TLabel *Label4;
	TEdit *edFormat;
	TEdit *edResult;
	TEdit *edError;
	TButton *btDecode;
	TButton *btOpen;
	TActionList *ActionList1;
	TTakePhotoFromLibraryAction *TakePhotoFromLibraryAction1;
	TTakePhotoFromCameraAction *TakePhotoFromCameraAction1;
	TButton *btCamer;
	TAction *acDecode;
	TImage *ImageContainer;
	TButton *btEndCamera;
	TButton *btClose;
	TAction *acClose;
	TCameraComponent *BarCameraCom;
	TAction *acBeginCamera;
	TAction *acEndCamera;
	TAction *acCameraLightOn;
	TAction *acCameraLightOff;
	TLabel *Label1;
	void __fastcall acDecodeExecute(TObject *Sender);
	void __fastcall TakePhotoFromLibraryAction1DidFinishTaking(TBitmap *Image);
	void __fastcall TakePhotoFromCameraAction1DidFinishTaking(TBitmap *Image);
	void __fastcall acCloseExecute(TObject *Sender);
	void __fastcall acBeginCameraExecute(TObject *Sender);
	void __fastcall acEndCameraExecute(TObject *Sender);
	void __fastcall acCameraLightOnExecute(TObject *Sender);
	void __fastcall BarCameraComSampleBufferReady(TObject *Sender, const __int64 ATime);
	void __fastcall acCameraLightOffExecute(TObject *Sender);
	void __fastcall FormDestroy(TObject *Sender);

private:	// User declarations
	TBitmap *BarBitmap;
	TBitmap *BuffBitmap;
	TRectF BarRect;
	System::String AppPath;
	int read_image(Ref<LuminanceSource> source, bool hybrid,bool search_multi);
	Ref<LuminanceSource>  BarcodePicToLuminanceSource(string filename);
	Ref<LuminanceSource>  ImageToLuminanceSource(TBitmap *Image);
	void __fastcall DrawImage();
public:		// User declarations
	__fastcall TfrmMain(TComponent* Owner);
};
//---------------------------------------------------------------------------
extern PACKAGE TfrmMain *frmMain;
//---------------------------------------------------------------------------
#endif

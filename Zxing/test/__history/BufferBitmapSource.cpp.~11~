//---------------------------------------------------------------------------

#pragma hdrstop

#include "BufferBitmapSource.h"
#include <iostream>
//---------------------------------------------------------------------------
#pragma package(smart_init)
namespace qrviddec {

BufferBitmapSource::BufferBitmapSource(int inWidth, int inHeight, ArrayRef<char> inBuffer)
:LuminanceSource(inWidth,inHeight)
{
	width = inWidth;
	height = inHeight;
	buffer = inBuffer;
}

BufferBitmapSource::~BufferBitmapSource()
{
}

int BufferBitmapSource::getWidth() const
{
	return width;
}

int BufferBitmapSource::getHeight() const
{
	return height;
}

ArrayRef<char> BufferBitmapSource::getRow(int y, ArrayRef<char> row) const
{
	if (y < 0 || y >= height)
	{
		fprintf(stderr, "ERROR, attempted to read row %d of a %d height image.\n", y, height);
		return NULL;
	}
	// WARNING: NO ERROR CHECKING! You will want to add some in your code.
	if (row == NULL) row = new Array<char>[width];
	for (int x = 0; x < width; x ++)
	{
		row[x] = buffer[y*width+x];
	}
	return row;
}

ArrayRef<char> BufferBitmapSource::getMatrix() const
{
	return buffer;
}

}
/***************************************************************************
  Copyright (c) 2002 MBLab

  Permission to use, copy, modify, distribute and sell this software
  and its documentation for any purpose is hereby granted without fee,
  provided that the above copyright notice appear in all copies and
  that both that copyright notice and this permission notice appear
  in supporting documentation.
  MBLab makes no representations about the suitability of this software
  for any purpose. It is provided "as is" without express or implied
  warranty.
***************************************************************************/

#include "tokstr.h"

//----------------------------------------------------------------------------------------------------------
#pragma package(smart_init)
//----------------------------------------------------------------------------------------------------------
char *cpp_tokens[]={
  "TOK_EMPTY",
  "TOK_EOF",
  "TOK_AMPERSAND",
  "TOK_AND",
  "TOK_ASSIGNEQUAL",
  "TOK_BITWISEANDEQUAL",
  "TOK_BITWISEOR",
  "TOK_BITWISEOREQUAL",
  "TOK_BITWISEXOR",
  "TOK_BITWISEXOREQUAL",
  "TOK_COMMA",
  "TOK_COLON",
  "TOK_DIVIDE",
  "TOK_DIVIDEEQUAL",
  "TOK_DOT",
  "TOK_DOTMBR",
  "TOK_ELLIPSIS",
  "TOK_EQUAL",
  "TOK_GREATERTHAN",
  "TOK_GREATERTHANOREQUALTO",
  "TOK_LCURLY",
  "TOK_LESSTHAN",
  "TOK_LESSTHANOREQUALTO",
  "TOK_LPAREN",
  "TOK_LSQUARE",
  "TOK_MINUS",
  "TOK_MINUSEQUAL",
  "TOK_MINUSMINUS",
  "TOK_MOD",
  "TOK_MODEQUAL",
  "TOK_NOT",
  "TOK_NOTEQUAL",
  "TOK_OR",
  "TOK_PLUS",
  "TOK_PLUSEQUAL",
  "TOK_PLUSPLUS",
  "TOK_POINTERTO",
  "TOK_POINTERTOMBR",
  "TOK_QUESTIONMARK",
  "TOK_RCURLY",
  "TOK_RPAREN",
  "TOK_RSQUARE",
  "TOK_SCOPE",
  "TOK_SEMICOLON",
  "TOK_SHIFTLEFT",
  "TOK_SHIFTLEFTEQUAL",
  "TOK_SHIFTRIGHT",
  "TOK_SHIFTRIGHTEQUAL",
  "TOK_STAR",
  "TOK_TILDE",
  "TOK_TIMESEQUAL",

  "TOK_ASM",
  "TOK_AUTO",
  "TOK_AUTOMATED",
  "TOK_BOOL",
  "TOK_BREAK",
  "TOK_CASE",
  "TOK_CATCH",
  "TOK_CDECL",
  "TOK_CHAR",
  "TOK_CLASS",
  "TOK_CLASSID",
  "TOK_CLOSURE",
  "TOK_CONST",
  "TOK_CONST_CAST",
  "TOK_CONTINUE",
  "TOK_DECLSPEC",
  "TOK_DEFAULT",
  "TOK_DELETE",
  "TOK_DISPID",
  "TOK_DO",
  "TOK_DOUBLE",
  "TOK_DYNAMIC_CAST",
  "TOK_ELSE",
  "TOK_ENUM",
  "TOK_EXCEPT",
  "TOK_EXPLICIT",
  "TOK_EXPORT",
  "TOK_EXTERN",
  "TOK_FALSE",
  "TOK_FASTCALL",
  "TOK_FINALLY",
  "TOK_FLOAT",
  "TOK_FOR",
  "TOK_FRIEND",
  "TOK_GOTO",
  "TOK_IF",
  "TOK_IMPORT",
  "TOK_INLINE",
  "TOK_INT",
  "TOK_INT8",
  "TOK_INT16",
  "TOK_INT32",
  "TOK_INT64",
  "TOK_LONG",
  "TOK_MSFASTCALL",
  "TOK_MSRETURN",
  "TOK_MUTABLE",
  "TOK_NAMESPACE",
  "TOK_NEW",
  "TOK_OPERATOR",
  "TOK_PASCAL",
  "TOK_PRIVATE",
  "TOK_PROPERTY",
  "TOK_PROTECTED",
  "TOK_PUBLIC",
  "TOK_PUBLISHED",
  "TOK_REGISTER",
  "TOK_REINTERPRET_CAST",
  "TOK_RETURN",
  "TOK_RTTI",
  "TOK_SHORT",
  "TOK_SIGNED",
  "TOK_SIZEOF",
  "TOK_STATIC",
  "TOK_STATIC_CAST",
  "TOK_STDCALL",
  "TOK_STRUCT",
  "TOK_SWITCH",
  "TOK_TEMPLATE",
  "TOK_THIS",
  "TOK_THREAD",
  "TOK_THROW",
  "TOK_TRUE",
  "TOK_TRY",
  "TOK_TYPEDEF",
  "TOK_TYPEID",
  "TOK_TYPENAME",
  "TOK_UNION",
  "TOK_UNSIGNED",
  "TOK_USING",
  "TOK_VIRTUAL",
  "TOK_VOID",
  "TOK_VOLATILE",
  "TOK_WCHAR_T",
  "TOK_WHILE",

  "TOK_ID",
  "TOK_OCTALINT",
  "TOK_DECIMALINT",
  "TOK_HEXADECIMALINT",
  "TOK_FLOATONE",
  "TOK_FLOATTWO",
  "TOK_PNDPND",
  "TOK_PND",
  "TOK_PP_NUMBER",
  "TOK_PNDDEFINE",
  "TOK_PNDIF",
  "TOK_PNDIFDEF",
  "TOK_PNDIFNDEF",
  "TOK_PNDELIF",
  "TOK_PNDELSE",
  "TOK_PNDENDIF",
  "TOK_PNDINCLUDE",
  "TOK_PNDLINE",
  "TOK_PNDPRAGMA",
  "TOK_PNDUNDEF",
  "TOK_PNDIMPORT",
  "TOK_FUNCID",
  "TOK_STRING",
  "TOK_CHARACTER",
  "TOK_FILENAME",
  "TOK_ASMSTAT",

  "TOK_PRGALIGNMENT",
  "TOK_PRGANON_STRUCT",
  "TOK_PRGARGSUSED",
  "TOK_PRGCHECKOPTION",
  "TOK_PRGDEFOPTION",
  "TOK_PRGUNDEFOPTION",
  "TOK_PRGINLINE",
  "TOK_PRGMESSAGE",
  "TOK_PRGNOPUSHOPTWARN",
  "TOK_PRGOBSOLETE",
  "TOK_PRGOPTION",
  "TOK_PRGWARN",
  "TOK_PRGOPTSTR",
  "TOK_PRGPUSH",
  "TOK_PRGPOP",

  "TOK_NEWLINE"};

//----------------------------------------------------------------------------------------------------------
char *cpp_options[]= {
  "optEmpty",
  "optTrue",
  "optStartValue",
  "optString",
  "optIntValue",

// Compiler options | Defines
  "optDefine",
  "optUndefine",
  "optIncludePath",
  "optLibraryPath",

// Compiler options | Code generation
  "optAlignData",
    "optAlignByte",
    "optAlignWord",
    "optAlignDWord",
    "optAlignQWord",
    "optAlignPara",
  "optEnumInt",
  "optCodePaging",
  "optMergeStrings",
  "optCharUnsigned",
  "optRegisterVar",
    "optRegisterVarNone",
    "optRegisterVarKeyword",
    "optRegisterVarAuto",
  "optUnicode",

// Compiler options | Floating point
  "optEmuFloat",
  "optFastFloat",
  "optPentFloat",

// Compiler options | Compiler output
  "optNoLink",
  "optExeName",
  "optLinkOpt",
  "optMapFile",
  "optObjName",
  "optSourceExt",
  "optExtErrorInfo",
  "optTarget",
    "optTargetWin",
    "optTargetCon",
    "optTargetDLL",
    "optTargetPkg",
  "optTargetMThread",
  "optUseDynamicRTL",
  "optUseVCL",
  "optAutoDepOut",
  "optUnderscores",
  "optOutputPath",

// Compiler options | Source
  "optNestedComments",
  "optIdLength",
  "optCppKeywords",
    "optBorlandKeywords",
    "optAnsiKeywords",
    "optUnixKeywords",
    "optKerniganKeywords",
  "optMSVCCompat",
  "optMFCCompat",
  "optFindIncFiles",

// Compiler options | Debugging
  "optStackFrame",
  "optInlineExpans",
  "optLinesNumbering",
  "optDebug",
  "optBrowserInfo",

// Compiler options | Precompiled headers
  "optPrecompHeaders",
    "optGenUsePrecompHeaders",
    "optNotUsePrecompHeaders",
    "optUsePrecompHeaders",
  "optCachePrecompHeaders",
  "optExtPrecompHeaders",
  "optSmartPrecompHeaders",
  "optNamePrecompHeaders",
  "optStopPrecompHeaders",

// Compiler options | Processor
  "optInstSet",
    "opt80386InstSet",
    "opt80486InstSet",
    "optPentInstSet",
    "optPentProInstSet",

// Compiler options | Calling convention
  "optCallConvent",
    "optPascalCall",
    "optCCall",
    "optMSFastCall",
    "optStandardCall",
    "optFastCall",

// Compiler options | Assembler-code options
  "optOverAsm",
  "optAsmName",
  "optToAsm",
  "optAsmOpt",

// C++ options | C++ compatibility
  "optMangling",
  "optForLoopVarScoping",
  "optZeroLenClasses",
  "optOldStyleStructure",
  "optMemberPointers",
    "optAllMemberPointers",
    "optMultipleMemberPointers",
    "optSingleMemberPointers",
    "optSmallestMemberPointers",
  "optHonorDeclPrec",
  "optZeroLenMemberFunc",
  "optUseGlobalDectr",

// C++ options | CodeGuard
  "optAllCodeGuard",
  "optInlPointerCodeGuard",
  "optDataAccessCodeGuard",
  "optThisPointerCodeGuard",
  
// C++ options | Virtual tables
  "optVTables",
    "optSmartVTables",
    "optExternalVTables",
    "optPublicVTables",

// C++ options | Templates
//  optExpandAllTempls,
  "optTempls",
    "optSmartTempls",
    "optExternalTempls",

// C++ options | Exception handling
  "optEnableExcept",
  "optExceptLocInfo",
  "optExceptDestrClean",
  "optExceptFastProlog",
  "optExceptSlowEpilog",
  "optRtti",

// Optimization options
  "optOptimSizeSpeed",
  "optOptimJumps",
  "optOptimSize",
  "optOptimSpeed",
  "optOptimBaseBlock",
  "optUnOptimBaseBlock",
  "optDisableOptim",
  "optOptimInlIntr",
  "optOptimPentInstr",
  "optOptimSizeAlt",
  "optOptimSpeedAlt",
  "optOptimLoopSpeed",
  "optOptimSpeedMSCompat",

// Warning message options
  "optCompilerIdent",
  "optDisplayWarn",
  "optNonZeroOnWarn",
  "optStopAfterWarns",
  "optStopAfterWarnsFile",
  "optStopAfterErrors",
  "optStopAfterErrorsFile",

// Message options | Portability
  "optWarn8069",
  "optWarn8011",
  "optWarn8068",
  "optWarn8009",
  "optWarn8071",
  "optWarn8079",

// Message options | ANSI violations
  "optWarn8081",
  "optWarn8067",
  "optWarn8075",
  "optWarn8073",
  "optWarn8017",
  "optWarn8007",
  "optWarn8005",
  "optWarn8020",
  "optWarn8015",
  "optWarn8082",
  "optWarn8006",
  "optWarn8061",
  "optWarn8036",

// Message options | Obsolete C++
  "optWarn8052",
  "optWarn8054",
  "optWarn8063",

// Message options | Potential C++ errors
  "optWarn8038",
  "optWarn8039",
  "optWarn8042",
  "optWarn8018",
  "optWarn8022",
  "optWarn8037",
  "optWarn8024",
  "optWarn8016",
  "optWarn8048",
  "optWarn8021",
  "optWarn8033",
  "optWarn8034",
  "optWarn8049",
  "optWarn8078",
  "optWarn8076",
  "optWarn8077",
  "optWarn8051",

// Message options | Inefficient C++ coding
  "optWarnInl",
    "optWarn8026",
    "optWarn8027",
  "optWarn8028",
  "optWarnLvc",
    "optWarn8029",
    "optWarn8030",
    "optWarn8031",
    "optWarn8032",

// Message options | Potential errors
  "optWarn8086",
  "optWarn8093",
  "optWarn8094",
  "optWarn8095",
  "optWarn8096",
  "optWarn8060",
  "optWarn8013",
  "optWarn8045",
  "optWarnPro",
    "optWarn8064",
    "optWarn8065",
  "optWarn8070",
  "optWarn8000",
  "optWarn8084",
  "optWarn8008",
  "optWarn8010",
  "optWarn8012",
  "optWarn8040",
  "optWarn8041",
  "optWarn8043",
  "optWarn8044",
  "optWarn8046",
  "optWarn8083",
  "optWarn8047",
  "optWarn8055",
  "optWarn8056",
  "optWarn8014",
  "optWarn8059",
  "optWarn8072",
  "optWarn8085",
  "optWarnStl",
    "optWarn8087",
    "optWarn8089",
    "optWarn8090",
    "optWarn8091",
    "optWarn8092",

// Message options | Inefficient coding
  "optWarn8004",
  "optWarn8057",
  "optWarn8080",
  "optWarn8074",
  "optWarn8066",
  "optWarn8019",

// Message options | General
  "optWarn8003",
  "optWarn8025",
  "optWarn8023",
  "optWarn8001",
  "optWarn8053",
  "optWarn8058",
  "optWarn8035",
  "optWarn8002",
  "optWarn8050",
  "optWarn8062",
  "optWarn8097",
  "optEof"
};
//----------------------------------------------------------------------------------------------------------


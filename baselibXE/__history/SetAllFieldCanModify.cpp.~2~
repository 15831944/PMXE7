//---------------------------------------------------------------------------

#pragma hdrstop

#include "SetAllFieldCanModify.h"
#include <xml.xmldoc.hpp>
//---------------------------------------------------------------------------
#pragma package(smart_init)
void __fastcall SetAllFieldsCanModify(TClientDataSet *AClientDataSet)
{
 //先判断是否有只读字段，如果没有直接返回省，提高时间和空间效率
 bool HasReadOnlyField=false;
 if(AClientDataSet==NULL) return;
 for(int i=0;i<AClientDataSet->FieldCount;i++)
 {
	  TField *cf=AClientDataSet->Fields->Fields[i];
	  if(cf->ReadOnly)
	  {
		HasReadOnlyField=true;
		break;
      }
 }
 if(!HasReadOnlyField) return;
 //如果存在则进行下列处理;
 _di_IXMLDocument DataXMLDocument=NewXMLDocument();
 try{
	 DataXMLDocument->LoadFromXML(AClientDataSet->XMLData);
//	 DataXMLDocument->Active=true;
	 IXMLNode *DATAPACKETNode=DataXMLDocument->ChildNodes->GetNode("DATAPACKET");
	 IXMLNode *METADATANode=NULL;
	 IXMLNode *FIELDSNode=NULL;
	 IXMLNodeList  *FieldChildList=NULL;
	 IXMLNode *FieldNode=NULL;
	 if(DATAPACKETNode!=NULL)
			 METADATANode= DATAPACKETNode->ChildNodes->GetNode("METADATA");
	 if(METADATANode!=NULL)
		 FIELDSNode =METADATANode->ChildNodes->GetNode("FIELDS");
	 if(FIELDSNode!=NULL)
		FieldChildList=FIELDSNode->ChildNodes;
	  if(FieldChildList!=NULL)
	  {
		  int fieldCount=FieldChildList->Count;
		  for(int j=0;j<fieldCount;j++)
		  {
			  FieldNode=FieldChildList->Nodes[j];  //发现只读属性，则干掉这个属性
			  if(FieldNode->GetAttribute("readonly")==String("true"))
				 FieldNode->AttributeNodes->Delete("readonly");
		  }
		 AClientDataSet->XMLData=DataXMLDocument->XML->Text;
	  }
 }
 __finally
 {
   DataXMLDocument->Active=false;
   DataXMLDocument=NULL;
 }

}